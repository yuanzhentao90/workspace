package com.mashibing.juc.c_020;

import java.util.Random;
import java.util.concurrent.Phaser;
import java.util.concurrent.TimeUnit;

public class TestPhaser2 {

	static Random r = new Random();

	static void milliSleep(int milli) {
		try {
			TimeUnit.MILLISECONDS.sleep(milli);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

	static class MarriagePhaser extends Phaser {
		@Override
		protected boolean onAdvance(int phase, int registeredParties) {
			switch (phase) {
			case 0:
				System.out.println("所有人到齐了！" + registeredParties);
				System.out.println();
				return false;
			case 1:
				System.out.println("所有人吃完了！" + registeredParties);
				System.out.println();
				return false;
			case 2:
				System.out.println("所有人离开了！" + registeredParties);
				System.out.println();
				return false;
			case 3:
				System.out.println("婚礼结束！新郎新娘抱抱！" + registeredParties);
				return true;
			default:
				return true;
			}
		}
	}
}
